//
//  TimeWarpConstants.swift
//  TimeWarpEditor
//
//  Created by Joseph Pagliaro on 8/25/22.
//  Copyright © 2022 Limit Point LLC. All rights reserved.
//

import Foundation
import SwiftUI

struct AlertInfo: Identifiable {
    
    enum AlertType {
        case urlNotLoaded
        case exporterSuccess
        case exporterFailed
        case timeWarpingFailed
        case noTimeWarpedVideoURL
        case warnTimeWarpWillReplace
        case warnExitWithoutSavingWarpedVideo
    }
    
    let id: AlertType
    let title: String
    let message: String
}

let kTitleAndDescriptionViewIsExpandedDefault = false

// View titles and descriptions
// TitleAndDescriptionView(title: kTimeWarpViewTitle, description: kTimeWarpViewDescription)
// Time Warp
let kTimeWarpViewTitle = "Time Warp"
let kTimeWarpViewDescription = "A component function specifies instantaneous time scaling of video and audio over a range.\n\nUse the edit button to configure time warp component functions for select video ranges.\n\nThen use the time warp button to apply them."
// Components Editor
let kComponentsEditorViewTitle = "Components Editor"
let kComponentsEditorViewDescription = "Use the edit button in each row to configure a time warp component function for a select video range.\n\nUse the + button to add a new component.\n\nA component function is defined by its warp type, scale and modifier values and time range in the video timeline.\n\nComponent functions are sorted in time."
// Component Editor
let kComponentEditorViewTitle = "Component Editor"
let kComponentEditorViewDescription = "Use the range slider and stepper buttons to select a video range for this component function.\n\nA range is valid if it does not overlap a neighboring range.\n\nSet attributes in the options view: warp type, scale and modifier values.\n\nUse the preview button to try the effect in the selected range."
    // Component Preview
let kWarpedVideoClipTitle = "Warped Video Clip"
let kVideoClipTitle = "Video Clip"
let kComponentPreviewViewTitle = "Component Preview"
let kComponentPreviewViewDescription = "The warped video preview was generated by applying the time warping component function to the portion of the video in its range."

let kVideoWriterBackgroundDescription = "Time Warp"

let kDefaultURL = Bundle.main.url(forResource: "DefaultVideo", withExtension: "mov")!
let kFireworksURL = Bundle.main.url(forResource: "Fireworks", withExtension: "mov")!
let kTwistsURL = Bundle.main.url(forResource: "Twists", withExtension: "mov")!

let kTimeWarpLastImportedFilenameKey = "TimeWarpLastImportedFilenameKey"
let kTimeWarpEditorComponentFunctionsKey = "TimeWarpEditorComponentFunctionsKey"

let kPlotAudioObservableHeight = 35.0

let kTimeWarpingPathViewCaption = "Indicator ° is relative to video track duration, which may differ from audio track."

let timeWarpSubdirectoryName:String? = "TimeWarpEditor" // where to put all temporary file
let timeWarpFilename_copied = "copied.mov"
let timeWarpFilename_timewarped = "timewarped.mov"
let timeWarpFilename_preview = "preview.mov" // the video preview filename

let kEchoURL = Bundle.main.url(forResource: "Echo", withExtension: "m4a")!  // Used in PlotAudioWaveformView_Previews
